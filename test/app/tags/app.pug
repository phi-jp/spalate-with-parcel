app
  div(ref='pages')
    //- div(ref='page')

  script.
    this.title = 'Hello, spalate with parcel!';

    this.on('mount', async () => {
    });

    var sleep = (msec) => new Promise(resolve => setTimeout(resolve, msec));

    this.gotoPage = async (pageTag, req, res) => {
      this.refs.pages.innerHTML = '';
      
      var element = document.createElement('div');
      element.setAttribute('data-is', pageTag);
      var tag = riot.mount(element, pageTag)[0];
      this.refs.pages.appendChild(element);

      // fetch 実行
      await this.fetch(tag, req, res);

      // head 取得
      this.head = this.getHead(tag);

      if (spalate.isBrowser) {
        // TODO: created は初めてのときのみ実行する(client 用の mount)
        tag.trigger('created');

        tag.trigger('show');
        tag.update();
      }
    };

    this.fetch = async (tag, req, res) => {
      if (tag.fetch) {
        var data = await tag.fetch({req, res});
        Object.assign(tag, data);
        tag.update();
      }

      // すべてのタグをまとめて配列化
      var tags = Object.values(tag.tags).flat();

      // 子タグがない場合は何もしない
      if (tags.length <= 0) return ;

      // fetch する
      var promises = tags.map(async (tag) => {
        return this.fetch(tag);
      });

      await Promise.all(promises);
    };

    this.getHead = (tag) => {
      var head = {};
      Object.assign(head, spalate.config.head);
      if (tag.head) {
        var data = tag.head();
        Object.assign(head, data);
      }

      return head;
    };
