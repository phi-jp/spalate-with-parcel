page-debug
  div.container
    div(data-is='module-header')
    //- h1 {title}

    div.mb16
      div isNode: {spalate.isNode}
      div isBrowser: {spalate.isBrowser}

    div.mb16
      h2.fs12.p8 グループ一覧
      div
        div.mb1(each='{item in items}', data-is='item-group', item='{item}')
    
    div.mb16
      div(data-is='module-note', note-id='1')
      div(data-is='module-note', note-id='2')
      div(data-is='module-note', note-id='3')

    div.p16
      div.s64.bg-red

    div.mb16
      img(src='/images/kenkyo.png')
    
    div.mb16
      ul.ml32
        li(each='{item in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}') item {item}
    
    div.mb16
      ul.ml32
        li(each='{item in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}') item {item}
    
    div.mb16
      ul.ml32
        li(each='{item in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}') item {item}

  style(type='less').
    :scope {
      display: block;
    }

  script.
    this.title = 'Hello, spalate with parcel!';

    this.fetch = async () => {
      var ref = db.collection('groups');
      var ss = await ref.get({source: "cache"});
      
      if (ss.empty) {
        var ss = await ref.get({source: "server"});
      }

      var items = ss.docs.map(doc => {
        return {
          id: doc.id,
          ref: doc.ref,
          data: doc.data(),
        }
      });

      return {
        items,
      };
    };

    this.head = () => {
      return {
        title: 'aaaaaaa',
      };
    };

    this.on('created', async () => {
      console.log('page-index');

      //- document.addEventListener('click', () => {
      //-   console.log('hoge');
      //- });
    });

    this.on('show', async () => {
    });
